frac_intras <- lapply(unique(c(snv_dat$st1, snv_dat$st2)), function(st){
lapply(c('MN MN','TN TN','CT CT'), function(s){
snvdat_orig_sub <- snvdat_orig[snv_dat$st1 == st & snv_dat$st2 == st & snv_dat$state_pair == s,]
frac_intra <- NULL
if(nrow(snvdat_orig_sub) != 0){
frac_intra <- get_frac_intra(snvdat_orig_sub) %>% mutate(ST = st, state = gsub(' .*','', s))
}
frac_intra
}) %>% bind_rows()
fs4 <- frac_intras %>%
mutate(ST = ifelse(ST %in% c('E. hormaechei ST114','E. hormaechei ST171',
'K. pneumoniae ST258', 'K. pneumoniae ST307'), ST,
'Other'),
ST = factor(ST, levels = c('E. hormaechei ST171', 'E. hormaechei ST114',
'K. pneumoniae ST258', 'K. pneumoniae ST307',
'Other'),
labels = c('*E. hormaechei* ST171', '*E. hormaechei* ST114',
'*K. pneumoniae* ST258', '*K. pneumoniae* ST307',
'Other'))) %>%
filter(frac_intra != 0 & ST != 'Other') %>%
ggplot(aes(x = pairwise_dist, y = frac_intra)) +
geom_bar(stat = "identity", fill = "blue", alpha = 0.5) +
labs(x = "Pairwise SNV distance", y = "Fraction of intra-facility pairs") + xlim(0, 50) +
facet_wrap(state~ST, scales = 'free') +
theme(strip.text = element_markdown())
ggsave(plot = fs4, filename = 'figures/FigS4.png', width = 6, height = 5)
fs4
f2 <- snv_dat %>%
mutate(pairwise_dist = ifelse(pairwise_dist == 0, 1, pairwise_dist),
pair_type = factor(gsub(' pair', '', pair_type), levels = c('Intra-facility','Inter-facility')),
Species = gsub('^', '\\*', Species),
Species = gsub('$', '\\*', Species),
state1 = factor(state1, levels = c('CT', 'MN', 'TN'))) %>%
filter(pair_type != 'Unknown' & ST != 'Other') %>%
ggplot(aes(x = pair_type, y = pairwise_dist)) +
geom_jitter(aes(fill = under_thresh, color = under_thresh),alpha = 0.5) +
scale_color_manual(values = c('[0,5]' = "#9EBCDA",'(5,10]' = "#BFD3E6", '(10,15]' = "#E0ECF4",'(15,∞)' = "#FBB4AE")) +
geom_violin(position = 'identity',alpha=0, color = 'azure4') +
facet_grid(Species+ST~state1, scales = 'free') + scale_y_log10() +
labs(x = 'Pair type',y = 'Pairwise SNV distance', color = 'SNV bin', fill = 'SNV bin') +
theme(strip.text.y = element_markdown())
ggsave(plot = f2, filename = 'figures/Fig2.png', width = 6.5, height = 5)
f2
fs5 <- snv_dat %>% filter(state1 == state2 & pair_type != 'Unknown') %>%
mutate(state1 = factor(state1, levels = c('CT','MN','TN')),
pair_type = ifelse(is.na(pair_type), 'Unknown', pair_type),
st1 = gsub('^', '\\*', st1),
st1 = gsub('e ', 'e\\* ', st1),
st1 = gsub('i ', 'i\\* ', st1)) %>%
ggplot(aes(x = pairwise_dist, y = st1, color = pair_type)) +
geom_vline(xintercept = 10, color = 'darkgrey') +
geom_jitter(alpha=0.25) + facet_grid(~state1, scales = 'free') +
scale_color_manual(values = c('lightslateblue','black')) +
labs(y = '', x = 'Pairwise SNV distance', color = '') +
theme(axis.text.y = element_markdown())
ggsave(plot = fs5, filename = 'figures/FigS5.png', width = 7, height = 5)
fs5
fs6 <- left_join(snv_dat %>% rename(pd_snv = pairwise_dist), pat_dat %>% rename(pd_pat = pairwise_dist)) %>%
mutate(state1 = factor(state1, levels = c('CT', 'MN', 'TN')),
pair_type = factor(gsub(' pair', '', pair_type), levels = c('Intra-facility','Inter-facility')),
Species = gsub('^', '\\*', Species),
Species = gsub('$', '\\*', Species)) %>%
filter(pair_type != 'Unknown' & ST != 'Other') %>%
ggplot(aes(x = pair_type, y = pd_pat)) + geom_jitter(aes(fill = under_thresh, color = under_thresh),alpha = 0.5) +
scale_color_manual(values = c('[0,5]' = "#9EBCDA",'(5,10]' = "#BFD3E6", '(10,15]' = "#E0ECF4",'(15,∞)' = "#FBB4AE")) +
geom_violin(position = 'identity',alpha=0, color = 'azure4') +
facet_grid(Species+ST~state1, scales = 'free') + scale_y_log10() +
labs(x = 'Pair type',y = 'Pairwise patristic distance', color = 'SNV bin', fill = 'SNV bin') +
theme(strip.text.y = element_markdown())
ggsave(plot = fs6, filename = 'figures/FigS6.png', width = 6.5, height = 5)
fs6
min_dat <- lapply(unique(c(as.character(snv_dat$isolate1), as.character(snv_dat$isolate2))), function(i){
snv_dat %>% filter(pair_type == 'Intra-facility pair' & (isolate1 == i | isolate2 == i)) %>%
group_by(loc1, ST_orig, state1) %>%
summarize(dist_min = min(pairwise_dist))
}) %>% bind_rows() %>% suppressMessages() %>% suppressWarnings()
fs7 <- min_dat %>%
mutate(under_thresh = ifelse(dist_min <= 15, '(10,15]','(15,∞)'),
under_thresh = ifelse(dist_min <= 10, '(5,10]',under_thresh),
under_thresh = ifelse(dist_min <= 5, '[0,5]',under_thresh),
under_thresh = factor(under_thresh, levels = rev(c('[0,5]','(5,10]','(10,15]','(15,∞)'))),
ST = ifelse(ST_orig %in% c('K. pneumoniae ST258','E. hormaechei ST171', 'K. pneumoniae ST307','E. hormaechei ST114'), ST_orig, 'Other'),
ST = factor(ST, levels = c('E. hormaechei ST171', 'E. hormaechei ST114', 'K. pneumoniae ST258', 'K. pneumoniae ST307', 'Other'),
labels = c('*E. hormaechei*<br>ST171', '*E. hormaechei*<br>ST114',
'*K. pneumoniae*<br>ST258', '*K. pneumoniae*<br>ST307', 'Other')),
state1 = factor(state1, levels = c('CT', 'MN', 'TN'))) %>%
ggplot(aes(x = reorder(loc1, loc1, function(x)-length(x)), fill = under_thresh)) +
geom_bar() +
scale_fill_manual(values = c('[0,5]' = "#9EBCDA",'(5,10]' = "#BFD3E6", '(10,15]' = "#E0ECF4",'(15,∞)' = "#FBB4AE")) +
labs(y = "Number of isolates", x = "Facility", fill = 'SNV bin of closest\nintra-facility isolate') +
facet_grid(ST~state1, space = 'free', scales = 'free_x') +
theme(axis.text.x = element_blank(), strip.text.y = element_markdown()) +
scale_y_continuous(breaks = scales::pretty_breaks())
ggsave(plot = fs7, filename = 'figures/FigS7.png', width = 7, height = 5)
fs7
fisher <- function(a,b,c,d){
data <- matrix(c(a,b,c,d),ncol=2)
c(p = fisher.test(data)$p.value,
OR = fisher.test(data)$estimate)
}
intra_pairs_ct <- snv_dat %>% filter(loc1 == loc2 & st1 == st2 & state1 == 'CT')
intra_pairs_mn <- snv_dat %>% filter(loc1 == loc2 & st1 == st2 & state1 == 'MN')
intra_pairs_tn <- snv_dat %>% filter(loc1 == loc2 & st1 == st2 & state1 == 'TN')
pt_info_ct <- suppressMessages(lapply(1:nrow(intra_pairs_ct), function(x){
sub <- pt_feats_ct %>% filter(Sample_ID %in% unlist(c(intra_pairs_ct[x,c('isolate1','isolate2')]))) %>%
select_if(colSums(is.na(.)) == 0)
info <- bind_cols(intra_pairs_ct[x,])%>% mutate(shared_clin = FALSE)
if(ncol(sub) > 2 & nrow(sub) > 1){
info <- info %>% mutate(shared_clin = TRUE)
}
info
})) %>% bind_rows()
pt_info_mn <- suppressMessages(lapply(1:nrow(intra_pairs_mn), function(x){
sub <- pt_feats_mn %>% filter(Sample_ID %in% unlist(c(intra_pairs_mn[x,c('isolate1','isolate2')]))) %>%
select_if(colSums(is.na(.)) == 0)
info <- bind_cols(intra_pairs_mn[x,])%>% mutate(shared_clin = FALSE)
if(ncol(sub) > 2 & nrow(sub) > 1){
info <- info %>% mutate(shared_clin = TRUE, shared_comorb = paste0(names(sub)[!names(sub) == 'Sample_ID'], collapse = ','))
}
info
})) %>% bind_rows()
pt_info_tn <- suppressMessages(lapply(1:nrow(intra_pairs_tn), function(x){
sub <- pt_feats_tn %>% filter(Sample_ID %in% unlist(c(intra_pairs_tn[x,c('isolate1','isolate2')]))) %>%
unique() %>%
select_if(c(TRUE, colSums(.[,2:ncol(.)]) != 0))
info <- bind_cols(intra_pairs_tn[x,]) %>% mutate(shared_clin = FALSE)
if(ncol(sub) > 2 & nrow(sub) > 1){
info <- info %>% mutate(shared_clin = TRUE, shared_comorb = paste0(names(sub)[!names(sub) == 'Sample_ID'], collapse = ','))
}
info
})) %>% bind_rows()
pt_info_comb <- bind_rows(pt_info_mn, pt_info_tn, pt_info_ct) %>%
mutate(`pairwise_dist <= 10` = pairwise_dist <= 10) %>%
select(state1, st1, shared_clin, `pairwise_dist <= 10`)
pt_comorb_compare <- pt_info_comb %>%
group_by(state1, st1, shared_clin, `pairwise_dist <= 10`) %>% summarize(count = n()) %>%
mutate(sharedclin_pdlt10 = factor(paste0(ifelse(shared_clin, 'shared', 'not shared'), ', ',
ifelse(`pairwise_dist <= 10`, '≤10', '>10')),
levels = c('shared, ≤10', 'shared, >10', 'not shared, ≤10', 'not shared, >10'))) %>%
ungroup() %>%
arrange(sharedclin_pdlt10) %>%
select(-c(shared_clin, `pairwise_dist <= 10`)) %>%
pivot_wider(names_from = sharedclin_pdlt10, values_from = count, values_fill = 0) %>%
group_by(state1, st1) %>%
rowwise() %>%
mutate(fe_p = fisher(`shared, ≤10`, `shared, >10`, `not shared, ≤10`, `not shared, >10`)[[1]]) %>%
arrange(state1, st1) %>%
mutate(frac_shared_lt10 = `shared, ≤10`/(`shared, ≤10` + `not shared, ≤10`),
frac_shared_gt10 = `shared, >10`/(`shared, >10` + `not shared, >10`))
pt_comorb_compare
pr_summary <- bind_rows(pr_hosp_pairs_ct, pr_hosp_pairs_mn, pr_hosp_pairs_tn) %>%
left_join(snv_dat %>% filter(loc1 != loc2)) %>%
group_by(state1, st1, same_pr_hosp, pairwise_dist <= 10) %>%
summarize(total_l10 = n()) %>%
mutate(same_pr_hosp = ifelse(same_pr_hosp, 'pr_hosp','no_pr_hosp'),
`pairwise_dist <= 10` = ifelse(`pairwise_dist <= 10`, 'lt10','gt10')) %>%
pivot_wider(names_from = c(same_pr_hosp, `pairwise_dist <= 10`), values_from = c(total_l10)) %>%
rename(state = state1, st = st1) %>%
select(state, st, pr_hosp_lt10, no_pr_hosp_lt10, pr_hosp_gt10, no_pr_hosp_gt10) %>%
replace(is.na(.), 0)
pr_summary$fisher_p <- sapply(1:nrow(pr_summary), function(x){
exact2x2(matrix(unlist(c(pr_summary[x,3:6])), nrow = 2))$p.value %>% signif(digits = 1)
})
pr_summary <- pr_summary %>%
mutate(pr_hosp_lt10_pct = round(pr_hosp_lt10/(no_pr_hosp_lt10 + pr_hosp_lt10), 1)*100, .after = no_pr_hosp_lt10) %>%
mutate(pr_hosp_gt10_pct = round(pr_hosp_gt10/(no_pr_hosp_gt10 + pr_hosp_gt10), 1)*100, .after = no_pr_hosp_gt10) %>%
mutate('Pairwise SNV distance ≤ 10\nwith shared facility exposure (%)' =
paste0(pr_hosp_lt10, '/', (pr_hosp_lt10+no_pr_hosp_lt10), ' (',round(pr_hosp_lt10/(pr_hosp_lt10+no_pr_hosp_lt10),2)*100,')'),
'Pairwise SNV distance > 10\nwith shared facility exposure (%)' =
paste0(pr_hosp_gt10, '/', (pr_hosp_gt10+no_pr_hosp_gt10), ' (',round(pr_hosp_gt10/(pr_hosp_gt10+no_pr_hosp_gt10),2)*100,')')) %>%
select(c("state", "st",
"Pairwise SNV distance ≤ 10\nwith shared facility exposure (%)",
"Pairwise SNV distance > 10\nwith shared facility exposure (%)",
"fisher_p"
)) %>%
rename(State = state, ST = st, "Fisher's exact p" = fisher_p)
pr_summary
pr_hosp_pairs_ct <- left_join(pr_hosp_pairs_ct, snv_dat)
pr_hosp_pairs_mn <- left_join(pr_hosp_pairs_mn, snv_dat)
pr_hosp_pairs_tn <- left_join(pr_hosp_pairs_tn, snv_dat)
nodes <- bind_rows(pr_hosp_pairs_mn %>% select(loc1, state1, st1) %>%
rename(Facility_ID = loc1, state = state1, st = st1),
pr_hosp_pairs_mn %>% select(loc2, state2, st2) %>%
rename(Facility_ID = loc2, state = state2, st = st2),
pr_hosp_pairs_tn %>% select(loc1, state1, st1) %>%
rename(Facility_ID = loc1, state = state1, st = st1),
pr_hosp_pairs_tn %>% select(loc2, state2, st2) %>%
rename(Facility_ID = loc2, state = state2, st = st2),
pr_hosp_pairs_ct %>% select(loc1, state1, st1) %>%
rename(Facility_ID = loc1, state = state1, st = st1),
pr_hosp_pairs_ct %>% select(loc2, state2, st2) %>%
rename(Facility_ID = loc2, state = state2, st = st2)) %>%
filter(!duplicated(.)) %>% filter(!is.na(Facility_ID)) %>%
mutate(st = gsub('cloacae', 'hormaechei', st),
st = ifelse(st %in% c('E. hormaechei ST114','E. hormaechei ST171', 'K. pneumoniae ST258', 'K. pneumoniae ST307'), st, 'Other'))
edges <- bind_rows(pr_hosp_pairs_mn %>% rename(from = loc1, to = loc2),
pr_hosp_pairs_tn %>% rename(from = loc1, to = loc2),
pr_hosp_pairs_ct %>% rename(from = loc1, to = loc2)) %>%
filter(pairwise_dist < 10) %>%
select(from, to, same_pr_hosp, st1) %>%
filter(!is.na(to) & !is.na(from)) %>%
mutate(st1 = gsub('cloacae', 'hormaechei', st1),
st1 = ifelse(st1 %in% c('E. hormaechei ST114','E. hormaechei ST171', 'K. pneumoniae ST258', 'K. pneumoniae ST307'), st1, 'Other'),
st1 = factor(st1, levels = c('E. hormaechei ST114','E. hormaechei ST171',
'K. pneumoniae ST258', 'K. pneumoniae ST307', 'Other'),
labels = c('*E. hormaechei* ST114','*E. hormaechei* ST171',
'*K. pneumoniae* ST258', '*K. pneumoniae* ST307', 'Other')),
same_pr_hosp = ifelse(same_pr_hosp, 'Yes','No'))
graph <- tbl_graph(nodes = nodes, edges = edges, directed = FALSE) %>% induced.subgraph(igraph::degree(.) > 0)
fs8 <- graph %>% ggraph(layout = 'kk') +
geom_edge_parallel(aes(color = st1, linetype = same_pr_hosp, alpha = same_pr_hosp),sep = unit(0.4, "mm")) +
geom_node_point(size = 0.5) +
scale_edge_linetype_manual(values = c('dotted','solid')) +
facet_nodes(~state, nrow = 3) +
scale_edge_alpha_manual(values = c(0.5, 1)) +
scale_edge_color_manual(values = c('*E. hormaechei* ST171'="aquamarine4", '*E. hormaechei* ST114'="aquamarine3",
'*K. pneumoniae* ST258'="coral4", '*K. pneumoniae* ST307'="coral3",
'Other'='grey'),
breaks = c('*E. hormaechei* ST171', '*E. hormaechei* ST114',
'*K. pneumoniae* ST258', '*K. pneumoniae* ST307', 'Other'), drop = FALSE) +
labs(edge_color = 'Isolate pair ≤ 10 SNVs', edge_linetype = 'Patients have\nshared facility exposure',
edge_alpha = 'Patients have\nshared facility exposure') +
theme_graph() + theme(legend.text = element_markdown())
ggsave(plot = fs8, filename = 'figures/FigS8.png', width = 5, height = 6)
fs8
set.seed(0)
mn_pt_trans <- get_patient_flow(mn_trans_net_sub,
unique(facil_st$Facility_ID)[unique(facil_st$Facility_ID) %in%
c(mn_trans_net_sub$source_facil,
mn_trans_net_sub$dest_facil)]) %>%
filter(!duplicated(.))
tn_pt_trans <- get_patient_flow(tn_trans_net_sub, unique(facil_st$Facility_ID)[unique(facil_st$Facility_ID) %in%
c(tn_trans_net_sub$source_facil,
tn_trans_net_sub$dest_facil)]) %>%
filter(!duplicated(.))
ct_pt_trans <- get_patient_flow(ct_trans_net_sub, unique(facil_st$Facility_ID)[unique(facil_st$Facility_ID) %in%
c(ct_trans_net_sub$source_facil,
ct_trans_net_sub$dest_facil)]) %>%
filter(!duplicated(.))
sts <- c('ST171','ST258','ST114','ST307')
snv_by_st <- suppressWarnings(lapply(sts, function(x){
snvdat_sub <- snv_dat %>% filter(ST == x) %>% mutate(pairwise_dist = as.numeric(pairwise_dist))
snvdat_sub <- snvdat_sub[,1:6]
mn_snv_by_st_sub <- summarize_pairs(snvdat_sub) %>% mutate(ST = x)
})) %>% bind_rows()
pt_snv <- bind_rows(bind_cols(state = 'MN', mn_pt_trans),
bind_cols(state = 'TN', tn_pt_trans),
bind_cols(state = 'CT', ct_pt_trans)) %>% inner_join(snv_by_st) %>%
mutate(under_thresh = ifelse(dist_min <= 15, '(10,15]','(15,∞)'),
under_thresh = ifelse(dist_min <= 10, '(5,10]',under_thresh),
under_thresh = ifelse(dist_min <= 5, '[0,5]',under_thresh),
under_thresh = factor(under_thresh, levels = c('[0,5]','(5,10]','(10,15]','(15,∞)')),
species = ifelse(ST %in% c('ST258','ST307'), 'K. pneumoniae','E. hormaechei'))
pvals <- pt_snv %>%
mutate(leq_10_bool = ifelse(dist_min <= 10, 'close','not_close')) %>%
select(state, ST, leq_10_bool, sum_pt_trans_metric) %>% group_by(state, ST, leq_10_bool) %>%
summarize(sum_pt_trans_metric = list(sum_pt_trans_metric)) %>%
spread(leq_10_bool, sum_pt_trans_metric) %>%
group_by(state, ST) %>%
filter(!(is.null(unlist(close)) | is.null(unlist(not_close)))) %>%
mutate(close_median=median(unlist(close)),
not_close_median=median(unlist(not_close)),
p=wilcox.test(unlist(close),unlist(not_close))$p.value) %>%
mutate(species = ifelse(ST %in% c('ST258','ST307'), '*K. pneumoniae*','*E. hormaechei*'))
f3 <- pt_snv %>%
mutate(species = gsub('^', '\\*',species),
species = gsub('$', '\\*',species),
sum_pt_trans_metric = sum_pt_trans_metric + min(sum_pt_trans_metric[sum_pt_trans_metric != 0]/2), # no infinite values in transformation
dist_min = dist_min + min(dist_min[dist_min != 0]/2)) %>%  # no infinite values in transformation
ggplot(aes(x = sum_pt_trans_metric, y = dist_min)) +
geom_point(aes(color = under_thresh)) + scale_y_log10() + scale_x_log10() +
scale_color_manual(
values = c('[0,5]' = "#9EBCDA",'(5,10]' = "#BFD3E6", '(10,15]' = "#E0ECF4",'(15,∞)' = "#FBB4AE")
) +
geom_text(data = pvals, aes(x = 5e-5, y = 1, label = paste0('p=',signif(p, 1))), hjust = 0) +
facet_grid(species+ST~state) +
labs(x = 'Sum(patient flow between facility pair)', y = 'Minimum pairwise SNV distance', color = 'SNV bin') +
theme(strip.text.y = element_markdown())
ggsave(plot = f3, filename = 'figures/Fig3.png', width = 7, height = 4)
f3
fs9 <- full_join(pr_summary %>% mutate(ST_orig = ST, ST = gsub('.* ','',ST)) %>% rename('ind_p' = "Fisher's exact p"),
pvals %>% rename(State = state, 'agg_p' = 'p')) %>%
mutate(ST_orig = gsub('^', '\\*', ST_orig),
ST_orig = gsub('e ', 'e\\* ', ST_orig),
ST_orig = gsub('i ', 'i\\* ', ST_orig)) %>%
ggplot(aes(x = ind_p, y = agg_p, col = State, shape = ST_orig)) +
geom_point(size = 3) +
scale_color_manual(values = c(CT = "#46f0f0", MN = "#3cb44b", TN = "#4363d8")) +
geom_hline(yintercept = 0.05) +
geom_vline(xintercept = 0.05) +
labs(x = 'Patient transfer p-value from\nindividual-level analysis',
y = 'Patient transfer p-value from\naggregate-level analysis',
shape = 'ST') +
theme(legend.text = element_markdown())
ggsave(plot = fs9, filename = 'figures/FigS9.png', width = 5, height = 3)
fs9
# connecting each patient to their closest isolate with a subsequent collection date
edge_dat <- lapply(unique(c(as.character(snv_dat$isolate1), as.character(snv_dat$isolate2))), function(i){
cultdate <- facil_st$Cult_Date[facil_st$Sample_ID == i]
subset_dat <- snv_dat %>% filter(pair_type == 'Inter-facility pair' & (isolate1 == i | isolate2 == i) & state1 == 'MN')
dates <- sapply(unique(c(as.character(subset_dat$isolate1), as.character(subset_dat$isolate2))), function(j){
as.character(facil_st$Cult_Date[facil_st$Sample_ID == j])
})
dat <- NULL
if(length(dates) > 0){
keepers <- names(dates)[as.Date(dates) > cultdate]
dat <- subset_dat %>%
filter(isolate1 %in% keepers | isolate2 %in% keepers) %>%
filter(pairwise_dist == min(pairwise_dist)) %>%
mutate(earlier = as.character(ifelse(isolate2 == i, 'loc2','loc1')),
date1 = dates[as.character(isolate1)],
date2 = dates[as.character(isolate2)],
datediff = abs(as.numeric(as.Date(dates[as.character(isolate1)]) - as.Date(dates[as.character(isolate2)]))))
}
}) %>% bind_rows()
edges_for_plot <- edge_dat %>%
filter(pairwise_dist <= 15) %>%
left_join(facil_st %>% select(Sample_ID, Facility_ID, longitude, latitude),
by = c('isolate1' = 'Sample_ID', 'loc1' = 'Facility_ID')) %>%
rename(x = longitude, y = latitude) %>%
left_join(facil_st %>% select(Sample_ID, Facility_ID, longitude, latitude),
by = c('isolate2' = 'Sample_ID', 'loc2' = 'Facility_ID')) %>%
rename(xend = longitude, yend = latitude) %>%
filter(!(is.na(x) | is.na(xend)) & ST %in% c('ST171','ST258')) %>%
mutate(dist = abs(x - xend)^2 + abs(y - yend)^2)
facilities <- facil_st %>% filter(State == 'MN' & ST %in% c('E. hormaechei ST171', 'K. pneumoniae ST258')) %>%
select(Facility_ID, latitude, longitude) %>%
filter(!duplicated(.) & !is.na(latitude))
edges_for_plot_ec <- edges_for_plot %>% filter(ST == 'ST171') %>%
mutate(under_thresh = factor(under_thresh, levels = c("[0,5]", "(5,10]", "(10,15]")))
whole_state_ec <- facil_st %>%
mutate(ST = gsub('cloacae', 'hormaechei', ST)) %>%
filter(ST %in% c('E. hormaechei ST171')) %>%
mutate(ST = gsub('.* ST', 'ST', ST)) %>%
group_by(Facility_ID, latitude, longitude, ST)  %>% tally() %>%
ggplot(aes(x=longitude, y=latitude), color = "grey99") +
geom_curve(aes(x = xend, y = yend, xend = x, yend = y, color = under_thresh),     # draw edges as arcs
alpha = 1,
data = edges_for_plot_ec, curvature = 0.33) +
scale_color_manual(values = c('[0,5]' = "#9EBCDA",'(5,10]' = "#BFD3E6", '(10,15]' = "#E0ECF4")) +
geom_point(data = facilities, aes(x = longitude, y = latitude), alpha = 0.25, size = 1) +
geom_point(aes(size=n), alpha = 1, color = 'white') +
geom_point(aes(size=n), fill = adjustcolor(st_cols[c('E. hormaechei ST171')], alpha.f = 0.5), pch = 21) +
scale_size_continuous(breaks = seq(0, 20, 5), limits = c(0,25),
labels = c(0,5,10,15,20),
name = 'Number of\nisolates') +
coord_quickmap() +
geom_rect(aes(xmin = -986875.33, xmax = -986875.165, ymin = 896963.81, ymax = 896964.1),
fill = "transparent", color = "lightgrey", size = 1) +
labs(color = 'SNV bin', size = 'Number of\nisolates') +
guides(size = guide_legend(override.aes = list(alpha = c(0.25, 1, 1, 1, 1), fill = 'black'))) +
theme_void()
zoom_state_ec <- whole_state_ec + coord_quickmap(xlim=c(-986875.33+0.007, -986875.165-0.007), ylim=c(896963.81+0.012, 896964.1-0.012)) +
theme(legend.position = "none") +
geom_text(aes(label = ifelse(Facility_ID == 'F38', 'W', NA)),hjust=1.5, vjust=2)
edges_for_plot_kp <- edges_for_plot %>% filter(ST == 'ST258')
whole_state_kp <- facil_st %>%
filter(ST %in% c('K. pneumoniae ST258')) %>%
mutate(ST = gsub('.* ST', 'ST', ST)) %>%
group_by(Facility_ID, latitude, longitude, ST)  %>% tally() %>%
ggplot(aes(x=longitude, y=latitude), color = "grey99") +
geom_curve(aes(x = xend, y = yend, xend = x, yend = y, color = under_thresh),     # draw edges as arcs
alpha = 1,
data = edges_for_plot_kp, curvature = 0.33) +
scale_color_manual(values = c('[0,5]' = "#9EBCDA",'(5,10]' = "#BFD3E6", '(10,15]' = "#E0ECF4",'(15,∞)' = "#FBB4AE")) +
geom_point(data = facilities, aes(x = longitude, y = latitude), size = 1, alpha = 0.25) +
geom_point(aes(size=n), alpha = 1, color = 'white') +
geom_point(aes(size=n), fill = adjustcolor(st_cols['K. pneumoniae ST258'], alpha.f = 0.5), pch = 21) +
scale_size_continuous(breaks = seq(5, 20, 5), limits = c(1,25)) +
coord_quickmap() +
geom_rect(aes(xmin = -986875.33, xmax = -986875.165, ymin = 896963.81, ymax = 896964.1),
fill = "transparent", color = "lightgrey", size = 1) +
labs(size = 'Number of\nisolates', color = 'SNV bin') +
theme_void()
zoom_state_kp <- whole_state_kp + coord_quickmap(xlim=c(-986875.33+0.007, -986875.165-0.007), ylim=c(896963.81+0.012, 896964.1-0.012)) +
theme(legend.position = "none") +
geom_text(aes(label = ifelse(Facility_ID == 'F38', 'W', NA)),hjust=1.5, vjust=2)
# grob plotting function to plot panel colors
plot_panel_cols <- function(p, fills){
gt <- ggplot_gtable(ggplot_build(p))
strip_both <- which(grepl('strip-', gt$layout$name))
k <- 1
for (i in strip_both) {
j <- which(grepl('rect', gt$grobs[[i]]$grobs[[1]]$childrenOrder))
gt$grobs[[i]]$grobs[[1]]$children[[j]]$gp$fill <- fills[k]
k <- k+1
}
ggplotify::as.ggplot(gt)
}
bp <- edge_dat %>% pivot_longer(cols = c('loc1','loc2'), names_to = 'fname', values_to = 'loc') %>%
filter(ST %in% c('ST171','ST258') & under_thresh != '(15,∞)') %>%
mutate(under_thresh = factor(under_thresh, levels = rev(levels(under_thresh))),
ST = factor(ifelse(ST == 'ST171', '*E. hormaechei* ST171', '*K. pneumoniae* ST258'),
levels = c('*E. hormaechei* ST171', '*K. pneumoniae* ST258'))) %>%
filter(fname == earlier) %>%
select(loc, ST, under_thresh) %>%
ggplot(aes(x = loc)) +
geom_bar(aes(col = ifelse(loc == 'F38', 'yes','no'))) +
geom_bar(aes(fill = under_thresh)) +
facet_grid(ST~.) +
scale_fill_manual(values = c('[0,5]' = "#9EBCDA",'(5,10]' = "#BFD3E6", '(10,15]' = "#E0ECF4",'(15,∞)' = "#FBB4AE")) +
scale_color_manual(values = c('yes' = 'black','no' = NA)) +
labs(x = 'Facility', y = 'Number of isolates closely related\nto an isolate from another facility', fill = 'SNV bin')
bp_labeled <- bp + scale_x_discrete(labels = ifelse(ggplot_build(bp)$layout$panel_params[[1]]$x$breaks == 'F38', 'W','')) +
theme_classic() +
theme(legend.position = 'none', #axis.ticks.x = element_blank(),
text = element_text(size = 10),
axis.text.x = element_text(angle = 0),
strip.background = element_rect(fill="white",linetype='blank'),
strip.text.y = element_markdown())
bp_col <- plot_panel_cols(bp_labeled, adjustcolor(st_cols[c('E. hormaechei ST171','K. pneumoniae ST258')], alpha.f = 0.5))
leg <- ggpubr::get_legend(whole_state_ec +
theme(legend.box.margin = margin(0, 0, 0, 50))
)
f4 <- plot_grid(leg, NULL,
plot_grid(whole_state_ec + theme(legend.position = 'none'), zoom_state_ec,
NULL, NULL,
whole_state_kp + theme(legend.position = 'none'), zoom_state_kp,
NULL, NULL,
nrow = 4,
rel_heights = c(1,0.05,1,0.1,1,0.05,1,0.1)),
plot_grid(NULL, bp_col, NULL, ncol = 1, rel_heights = c(0.1,0.8,0.05)), nrow = 1,
rel_widths = c(0.2, 0.05, 1, 0.8)
)
ggsave(plot = f4, filename = 'figures/Fig4.png', width = 10, height = 4)
f4
## for each facility, how many times it's involved in a link
frac_ec <- lapply(unique(edges_for_plot_ec$loc1, edges_for_plot_ec$loc2), function(x){
edges_for_plot_ec %>% filter(pairwise_dist <= 10) %>%
mutate(conn = ifelse(loc1 == !!x | loc2 == !!x, 'connected', 'not')) %>%
group_by(conn, ST) %>% summarize(count = n()) %>% mutate(facil = x)
}) %>% bind_rows() %>% suppressMessages() %>% ungroup() %>% filter(!duplicated(.)) %>%
group_by(facil) %>%
mutate(n_facil = sum(count), frac = count/n_facil) %>%
ungroup() %>%
filter(conn == 'connected')
frac_kp <- lapply(unique(edges_for_plot_kp$loc1, edges_for_plot_kp$loc2), function(x){
edges_for_plot_kp %>% filter(pairwise_dist <= 10) %>%
mutate(conn = ifelse(loc1 == !!x | loc2 == !!x, 'connected', 'not')) %>%
group_by(conn, ST) %>% summarize(count = n()) %>% mutate(facil = x)
}) %>% bind_rows() %>% suppressMessages() %>% ungroup() %>% filter(!duplicated(.)) %>%
group_by(facil) %>%
mutate(n_facil = sum(count), frac = count/n_facil) %>%
ungroup() %>%
filter(conn == 'connected')
max(frac_ec$frac)
facils_ec <- frac_ec %>% pull(facil)
ec_perm_cts <- lapply(1:1000, function(x){
sample(facils_ec, sum(frac_ec$count), replace = TRUE) %>% table() %>% data.frame() %>% rename(facil = '.') %>%
mutate(tot = sum(Freq), perm = x, frac = Freq/tot) %>% slice_max(Freq) %>% slice(1)
}) %>% bind_rows()
max(frac_kp$frac)
facils_kp <- frac_kp %>% pull(facil)
kp_perm_cts <- lapply(1:1000, function(x){
sample(facils_kp, sum(frac_kp$count), replace = TRUE) %>% table() %>% data.frame() %>% rename(facil = '.') %>%
mutate(tot = sum(Freq), perm = x, frac = Freq/tot) %>% slice_max(Freq) %>% slice(1)
}) %>% bind_rows()
fs10 <- bind_rows(ec_perm_cts %>% select(frac) %>% mutate(ST = 'ST171'),
kp_perm_cts %>% select(frac) %>% mutate(ST = 'ST258')) %>%
mutate(ST = factor(ifelse(ST == 'ST171', '*E. hormaechei* ST171', '*K. pneumoniae* ST258'),
levels = c('*E. hormaechei* ST171', '*K. pneumoniae* ST258'))) %>%
ggplot(aes(x = frac)) +
geom_histogram(binwidth = 0.05) +
geom_point(data = tibble(frac = c(max(frac_ec$frac), max(frac_kp$frac)),
st = c('*E. hormaechei* ST171', '*K. pneumoniae* ST258')),
aes(y = 0), col = 'red', shape = 18, size = 5) +
facet_grid(~st, scales = 'free') +
labs(x = 'Maximum proportion of edges connected to a given facility', y = 'Number of edges') +
theme(strip.text.x = element_markdown())
sum(ec_perm_cts$frac > max(frac_ec$frac))/length(ec_perm_cts$frac)
sum(kp_perm_cts$frac > max(frac_kp$frac))/length(kp_perm_cts$frac)
fs10 <- plot_panel_cols(fs10, adjustcolor(st_cols[c('E. hormaechei ST171','K. pneumoniae ST258')], alpha.f = 0.5))
ggsave(plot = fs10, filename = 'figures/FigS11.png', width = 7, height = 4)
g_mn <- mn_trans_net_sub %>%
select(source_facil, dest_facil) %>%
as.matrix() %>%
graph_from_edgelist(directed = TRUE)
E(g_mn)$weight = mn_trans_net_sub %>% select(n_transfers) %>% deframe()
deg <- igraph::degree(g_mn)
stre <- strength(g_mn)
betw <- betweenness(g_mn)
clos <- closeness(g_mn, mode = 'all')
facil_w_ind <- which(names(V(g_mn)) == 'F38')
fs11 <- bind_cols(inds=names(deg), 'Degree'=deg, 'Strength'=stre, 'Betweenness'=betw, 'Closeness'=clos) %>%
pivot_longer(cols = -inds) %>%
ggplot(aes(x = value)) + geom_histogram(bins = 70) +
geom_point(data = data.frame(
value=c(deg[facil_w_ind], stre[facil_w_ind], betw[facil_w_ind],clos[facil_w_ind]),
name=c('Degree','Strength','Betweenness','Closeness')),
aes(x = value, y = 0), col = 'red', shape = 18, size = 3) +
ggrepel::geom_text_repel(data = data.frame(
value=c(deg[facil_w_ind], stre[facil_w_ind], betw[facil_w_ind],clos[facil_w_ind]),
name=c('Degree','Strength','Betweenness','Closeness')),
aes(label = 'W', y = 0), col = 'red', size = 3) +
labs(x = 'Centrality metric', y = 'Number of facilities') +
facet_wrap(~name, scales = 'free') +
theme(plot.margin = margin(0,0.5,0,0, "cm"))
ggsave(plot = fs11, filename = 'figures/FigS10.png', width = 5, height = 3.5)
fs11
full_join(pr_summary %>% mutate(ST_orig = ST, ST = gsub('.* ','',ST)) %>% rename('ind_p' = "Fisher's exact p"),
pvals %>% rename(State = state, 'agg_p' = 'p'))
full_join(pr_summary %>% mutate(ST_orig = ST, ST = gsub('.* ','',ST)) %>% rename('ind_p' = "Fisher's exact p"),
pvals %>% rename(State = state, 'agg_p' = 'p')) %>%
mutate(ST_orig = gsub('^', '\\*', ST_orig),
ST_orig = gsub('e ', 'e\\* ', ST_orig),
ST_orig = gsub('i ', 'i\\* ', ST_orig))
fs9
setwd('~/Desktop/un-report/')
list.files()
list.files('data')
list.files('cod')
list.files('code')
